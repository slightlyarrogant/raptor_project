Ponaglenie do zapłaty
Metadata

url: http://192.168.33.19/master/docs/company/procedury-standaryzacyjne/notyfikacje/notify-ponaglenie-do-zaplaty
scraped_at: 2024-09-05T12:18:02.778198
last_updated: 2024-09-05T12:18:02.778252
parent_id: 21c021b76586e248072c806c95187f09
path: aPaczka Plugin/Dobre praktyki/Szkolenia - B2B/Zestawienie webinaria/Zestawienie eSzkolenia/Inter stal/Handel/Magazyn/Praca z czytnikiem/Rozliczenie produkcji/Ustawienia Przyjmowanie Towaru na pakowaniu/Laguna/Analizy/Okucia/Montan stal/Ponaglenie do zapłaty
meta_tags: ['powiadomienia', 'klienta', 'jest', 'należy', 'zakładce', 'ustawiamy', 'wartości', 'ustawienia', 'tego', 'bota']

Content
CEL:
Celem ustawienia plugina ponagleń do zapłaty jest zautomatyzowanie weryfikacji dokumentów dla których zbliżają się terminy płatnością aby w konsekwencji automatycznie wysłać informacje do klientów z przypomnieniem o dokonaniu płatności
Lokalizacji/wymagania:
Ustawienia > Pluginy
Wymagana licencja na działanie BOTa
Opis konfiguracji oraz działania funkcjonalności:
Wprowadzenie mechanizmu w pluginie
Przy tworzeniu tego rodzaju powiadomienia należy pamiętać, że będziemy potrzebowali wykupionej u klienta licencji na działanie [BOTa], ponieważ jest to powiadomienie cykliczne. Utworzenie powiadomienia do ponagleń zaczynamy od dodania rodzaju powiadomienia [Wynik zapytania]. Wpisujemy tytuł, wybieramy typ obiektu [Dokument] a następnie wprowadzamy zapytanie, które będzie wyszukiwało faktury i paragony ze zbliżającym się terminem płatności. Poniżej przykład zapytania, które wyszukuje w bazie dokumenty FV i PR - 2 dni przed terminem:
select tr_idtrans from (select k_idklienta, tr_idtrans as tr_idtrans FROM tg_transakcje join tb_klient using (k_idklienta) join mvv.tb_klient_mv using (k_idklienta) where tr_rodzaj IN (1,7) and tr_zaplacono <> tr_dozaplaty and tr_dataplatnosci - 2  = current_date) AS t

Żeby zmienić ilość dni na więcej niż 2, wystarczy w końcowej części zapytania, zmienić ten parametr np. z 2 na 7 itp. Poniżej pokazana wypełniona karta odnośnie wspomnianych ustawień w zakładce „Główne”.

Konfiguracja w zakładce Alerty oraz dodanie typu powiadomienia
W następnym korku ustawiamy typ powiadomienia w zakładce [Alerty]. Ustawiamy maila z odpowiednią treścią. Przykładowy sformatowany tekst w HTML jaki można umieścić w takim powiadomieniu to:
Ta wiadomość została wygenerowana automatycznie. Prosimy na nią nie odpowiadać.<br /><br />
Uprzejmie informujemy, iż zbliża się termin płatności faktury VAT nr <b> {Numer} </b> data wystawienia <b> {Data2} </b> na kwotę <b> {WartoscBrutto} </b> brutto wystawioną na firmę <b> {Klient1.Nazwa} </b> NIP: <b> {Klient1.NIP} </b> Prosimy o uregulowanie należności.<br /><br />
Jeżeli dokonali już Państwo zapłaty powyższej faktury, prosimy o potraktowanie tego powiadomienia jako nieaktualne.<br /><br />
W przypadku wątpliwości co do zasadności tego powiadomienia lub też wyjaśnień z Państwa strony, prosimy o kontakt z naszą firmą pod numerem telefonu: <b> 12345678 </b> email: <b> demo@cfi.pl </b>

Poniżej przykładowo wypełniona karta z treścią maila.

Następną rzeczą jaką należy skonfigurować jest zakładka [Odbiorcy] we wspomnianej wcześniej zakładce [Alerty]. W tym miejscu ustawiamy do kogo mają być wysłane powiadomienia, w przypadku powiadomienia Ponaglenia możemy wykorzystać dwa pola: główny mail z karty klienta wybrany na dokumencie lub wartość dowolna na karcie klienta. W obydwu przypadkach należy wykorzystać zapytania SQL. Odnośnie pola mail z karty klienta wpisujemy:
select ph_phone from tb_telefony where ph_type = 2 and ph_datatype = 1 and ph_id = {KLIENT1.ID}

Odnośnie wartości dowolnej z karty klienta wpisujemy (należy ją dodać w [Ustawienia] > [Słowniki]):
select regexp_split_to_table(k_value132, ';') from mvv.tb_klient_mv where k_idklienta = {KLIENT1.ID}

gdzie zmienna [k_value132] to nazwa wartości dowolnej pod bazą danych i jest widoczna w słownikach dla „Wartości dowolne klienta” na definicji danej wartości dowolnej. Dzięki użyciu w zapytaniu funkcji [regexp_split_to_table] można wpisać w tym polu na karcie klienta, kilka adresów mailowych oddzielonych ;(średnikiem) bez odstępów.
Najczęściej ustawia się to za pomocą wartości dowolnej na kartotece klienta. Dana firma musi uzupełnić sobie to pole na kartotekach swoich klientów o adresy mailowe ale dzięki temu ma pewność, że wiadomość trafi do odpowiedniej osoby zajmującej się płatnościami/fakturami. Poniżej pokazano jak należy umieść wspomniane wyżej zapytanie w zakładce [Odbiorcy].

Ustawienie cykliczności oraz BOTa
Następną istotną kwestią jest ustawienie w zakładce [Cykliczność], kiedy te powiadomienia mają być wysyłane. Standardowo ustawiamy ten rodzaj powiadomienia codziennie na wybraną godzinę np. 6:00. Wszystkie parametry ustawiamy jak na poniższym zdjęciu:

Powtarzanie: Co dzień,
Powtarzaj co: 1 dzień,
Początek: od dnia kiedy chcemy uruchomić powiadomienie,
Koniec: Nigdy.


Ostatnią rzeczą do ustawienia już po za pluginem Notify jest BOT. Należy wybrać jakiś komputer z Windowsem, który będzie działał najlepiej 24/7. Na takim komputerze tworzymy profil w Vendo Starterze w trybie BOTa i podgrywamy plik konfiguracyjny (tekstowy) z rozszerzeniem [bot.cfg.] W zawartości tego pliku należy wpisać:
[PluginTask]
name=QueryTriggerTask
cronTxt= */5 * * * *

Najlepiej w profilu BOTa włączyć autologowanie a w Vendo Starterze uruchomić BOT checker, żeby w razie czego był on pilnowany, gdy ulegnie zawieszeniu. Dla BOTa dobrze jest dodać nowego pracownika w Vendo o loginie [BOT] i nadać mu odpowiednie uprawnienia do logowania.
Images



